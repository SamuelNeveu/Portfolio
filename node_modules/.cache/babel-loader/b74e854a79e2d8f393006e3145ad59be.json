{"ast":null,"code":"var e,\n    n = require(\"react\"),\n    t = (e = require(\"resize-observer-polyfill\")) && \"object\" == typeof e && \"default\" in e ? e.default : e,\n    r = {\n  debug: 10,\n  info: 20,\n  warn: 30,\n  error: 40,\n  none: 100\n},\n    i = \"undefined\" != typeof window && window.document && window.document.createElement ? n.useLayoutEffect : n.useEffect;\n\nmodule.exports = function (e) {\n  void 0 === e && (e = {});\n  var o = e.logLevel;\n  void 0 === o && (o = \"info\");\n  var c = e.maxFontSize;\n  void 0 === c && (c = 100);\n  var f = e.minFontSize;\n  void 0 === f && (f = 20);\n  var u = e.onFinish,\n      a = e.onStart,\n      s = e.resolution;\n  void 0 === s && (s = 5);\n  var l = r[o],\n      S = n.useCallback(function () {\n    return {\n      calcKey: 0,\n      fontSize: c,\n      fontSizePrev: f,\n      fontSizeMax: c,\n      fontSizeMin: f\n    };\n  }, [c, f]),\n      d = n.useRef(null),\n      v = n.useRef(),\n      z = n.useRef(!1),\n      m = n.useState(S),\n      w = m[0],\n      M = m[1],\n      h = w.calcKey,\n      y = w.fontSize,\n      x = w.fontSizeMax,\n      b = w.fontSizeMin,\n      g = w.fontSizePrev,\n      F = null,\n      K = n.useState(function () {\n    return new t(function () {\n      F = window.requestAnimationFrame(function () {\n        z.current || (a && a(), z.current = !0, M(Object.assign({}, S(), {\n          calcKey: h + 1\n        })));\n      });\n    });\n  })[0];\n  n.useEffect(function () {\n    return d.current && K.observe(d.current), function () {\n      F && window.cancelAnimationFrame(F), K.disconnect();\n    };\n  }, [F, K]);\n  var E = d.current && d.current.innerHTML;\n  return n.useEffect(function () {\n    0 === h || z.current || (E !== v.current && (a && a(), M(Object.assign({}, S(), {\n      calcKey: h + 1\n    }))), v.current = E);\n  }, [h, S, E, a]), i(function () {\n    if (0 !== h) {\n      var e = Math.abs(y - g) <= s,\n          n = !!d.current && (d.current.scrollHeight > d.current.offsetHeight || d.current.scrollWidth > d.current.offsetWidth),\n          t = y > g;\n      if (e) n && y === g ? (z.current = !1, l <= r.info && console.info(\"[use-fit-text] reached `minFontSize = \" + f + \"` without fitting text\")) : n ? M({\n        fontSize: t ? g : b,\n        fontSizeMax: x,\n        fontSizeMin: b,\n        fontSizePrev: g,\n        calcKey: h\n      }) : (z.current = !1, u && u(y));else {\n        var i,\n            o = x,\n            c = b;\n        n ? (i = t ? g - y : b - y, o = Math.min(x, y)) : (i = t ? x - y : g - y, c = Math.max(b, y)), M({\n          calcKey: h,\n          fontSize: y + i / 2,\n          fontSizeMax: o,\n          fontSizeMin: c,\n          fontSizePrev: y\n        });\n      }\n    }\n  }, [h, y, x, b, g, u, d, s]), {\n    fontSize: y + \"%\",\n    ref: d\n  };\n};","map":{"version":3,"mappings":"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","names":["LOG_LEVEL","debug","info","warn","error","none","useIsoLayoutEffect","window","document","createElement","useLayoutEffect","useEffect","logLevel","logLevelOption","initState","useCallback","calcKey","fontSize","maxFontSize","fontSizePrev","minFontSize","fontSizeMax","fontSizeMin","ref","useRef","innerHtmlPrevRef","isCalculatingRef","m","useState","animationFrameId","K","ResizeObserver","requestAnimationFrame","current","onStart","setState","Object","ro","observe","cancelAnimationFrame","disconnect","innerHtml","innerHTML","isWithinResolution","Math","abs","resolution","isOverflow","scrollHeight","offsetHeight","scrollWidth","offsetWidth","isAsc","console","onFinish","delta","newMax","newMin","min","max"],"sources":["/home/spare/Documents/NewPortfolio/Portfolio/node_modules/use-fit-text/index.ts"],"sourcesContent":["import {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport type TLogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"none\";\n\nexport type TOptions = {\n  logLevel?: TLogLevel;\n  maxFontSize?: number;\n  minFontSize?: number;\n  onFinish?: (fontSize: number) => void;\n  onStart?: () => void;\n  resolution?: number;\n};\n\nconst LOG_LEVEL: Record<TLogLevel, number> = {\n  debug: 10,\n  info: 20,\n  warn: 30,\n  error: 40,\n  none: 100,\n};\n\n// Suppress `useLayoutEffect` warning when rendering on the server\n// https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsoLayoutEffect =\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n    ? useLayoutEffect\n    : useEffect;\n\nconst useFitText = ({\n  logLevel: logLevelOption = \"info\",\n  maxFontSize = 100,\n  minFontSize = 20,\n  onFinish,\n  onStart,\n  resolution = 5,\n}: TOptions = {}) => {\n  const logLevel = LOG_LEVEL[logLevelOption];\n\n  const initState = useCallback(() => {\n    return {\n      calcKey: 0,\n      fontSize: maxFontSize,\n      fontSizePrev: minFontSize,\n      fontSizeMax: maxFontSize,\n      fontSizeMin: minFontSize,\n    };\n  }, [maxFontSize, minFontSize]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const innerHtmlPrevRef = useRef<string>();\n  const isCalculatingRef = useRef(false);\n  const [state, setState] = useState(initState);\n  const { calcKey, fontSize, fontSizeMax, fontSizeMin, fontSizePrev } = state;\n\n  // Montior div size changes and recalculate on resize\n  let animationFrameId: number | null = null;\n  const [ro] = useState(\n    () =>\n      new ResizeObserver(() => {\n        animationFrameId = window.requestAnimationFrame(() => {\n          if (isCalculatingRef.current) {\n            return;\n          }\n          onStart && onStart();\n          isCalculatingRef.current = true;\n          // `calcKey` is used in the dependencies array of\n          // `useIsoLayoutEffect` below. It is incremented so that the font size\n          // will be recalculated even if the previous state didn't change (e.g.\n          // when the text fit initially).\n          setState({\n            ...initState(),\n            calcKey: calcKey + 1,\n          });\n        });\n      }),\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      ro.observe(ref.current);\n    }\n    return () => {\n      animationFrameId && window.cancelAnimationFrame(animationFrameId);\n      ro.disconnect();\n    };\n  }, [animationFrameId, ro]);\n\n  // Recalculate when the div contents change\n  const innerHtml = ref.current && ref.current.innerHTML;\n  useEffect(() => {\n    if (calcKey === 0 || isCalculatingRef.current) {\n      return;\n    }\n    if (innerHtml !== innerHtmlPrevRef.current) {\n      onStart && onStart();\n      setState({\n        ...initState(),\n        calcKey: calcKey + 1,\n      });\n    }\n    innerHtmlPrevRef.current = innerHtml;\n  }, [calcKey, initState, innerHtml, onStart]);\n\n  // Check overflow and resize font\n  useIsoLayoutEffect(() => {\n    // Don't start calculating font size until the `resizeKey` is incremented\n    // above in the `ResizeObserver` callback. This avoids an extra resize\n    // on initialization.\n    if (calcKey === 0) {\n      return;\n    }\n\n    const isWithinResolution = Math.abs(fontSize - fontSizePrev) <= resolution;\n    const isOverflow =\n      !!ref.current &&\n      (ref.current.scrollHeight > ref.current.offsetHeight ||\n        ref.current.scrollWidth > ref.current.offsetWidth);\n    const isFailed = isOverflow && fontSize === fontSizePrev;\n    const isAsc = fontSize > fontSizePrev;\n\n    // Return if the font size has been adjusted \"enough\" (change within `resolution`)\n    // reduce font size by one increment if it's overflowing.\n    if (isWithinResolution) {\n      if (isFailed) {\n        isCalculatingRef.current = false;\n        if (logLevel <= LOG_LEVEL.info) {\n          console.info(\n            `[use-fit-text] reached \\`minFontSize = ${minFontSize}\\` without fitting text`,\n          );\n        }\n      } else if (isOverflow) {\n        setState({\n          fontSize: isAsc ? fontSizePrev : fontSizeMin,\n          fontSizeMax,\n          fontSizeMin,\n          fontSizePrev,\n          calcKey,\n        });\n      } else {\n        isCalculatingRef.current = false;\n        onFinish && onFinish(fontSize);\n      }\n      return;\n    }\n\n    // Binary search to adjust font size\n    let delta: number;\n    let newMax = fontSizeMax;\n    let newMin = fontSizeMin;\n    if (isOverflow) {\n      delta = isAsc ? fontSizePrev - fontSize : fontSizeMin - fontSize;\n      newMax = Math.min(fontSizeMax, fontSize);\n    } else {\n      delta = isAsc ? fontSizeMax - fontSize : fontSizePrev - fontSize;\n      newMin = Math.max(fontSizeMin, fontSize);\n    }\n    setState({\n      calcKey,\n      fontSize: fontSize + delta / 2,\n      fontSizeMax: newMax,\n      fontSizeMin: newMin,\n      fontSizePrev: fontSize,\n    });\n  }, [\n    calcKey,\n    fontSize,\n    fontSizeMax,\n    fontSizeMin,\n    fontSizePrev,\n    onFinish,\n    ref,\n    resolution,\n  ]);\n\n  return { fontSize: `${fontSize}%`, ref };\n};\n\nexport default useFitText;\n"]},"metadata":{},"sourceType":"script"}